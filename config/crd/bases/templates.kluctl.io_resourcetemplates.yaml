---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: resourcetemplates.templates.kluctl.io
spec:
  group: templates.kluctl.io
  names:
    kind: ResourceTemplate
    listKind: ResourceTemplateList
    plural: resourcetemplates
    singular: resourcetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceTemplate is the Schema for the resourcetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceTemplateSpec defines the desired state of ResourceTemplate
            properties:
              generators:
                items:
                  properties:
                    pullRequest:
                      properties:
                        filters:
                          description: Filters for which pull requests should be considered.
                          items:
                            description: PullRequestGeneratorFilter is a single pull
                              request filter. If multiple filter types are set on
                              a single struct, they will be AND'd together. All filters
                              must pass for a pull request to be included.
                            properties:
                              branchMatch:
                                type: string
                            type: object
                          type: array
                        gitlab:
                          properties:
                            api:
                              description: The GitLab API URL to talk to. If blank,
                                uses https://gitlab.com/.
                              type: string
                            labels:
                              description: Labels is used to filter the MRs that you
                                want to target
                              items:
                                type: string
                              type: array
                            project:
                              description: GitLab project to scan. Required.
                              type: string
                            pullRequestState:
                              description: 'PullRequestState is an additional MRs
                                filter to get only those with a certain state. Default:
                                "" (all states)'
                              type: string
                            tokenRef:
                              description: Authentication token reference.
                              properties:
                                key:
                                  type: string
                                secretName:
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                          required:
                          - project
                          type: object
                      type: object
                  type: object
                type: array
              interval:
                default: 30s
                type: string
              templates:
                items:
                  properties:
                    object:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    raw:
                      type: string
                  type: object
                type: array
            required:
            - generators
            - interval
            - templates
            type: object
          status:
            description: ResourceTemplateStatus defines the observed state of ResourceTemplate
            properties:
              appliedResources:
                items:
                  properties:
                    error:
                      type: string
                    ref:
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      - namespace
                      - version
                      type: object
                    success:
                      type: boolean
                  required:
                  - ref
                  - success
                  type: object
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
